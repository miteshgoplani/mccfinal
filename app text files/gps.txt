ANDROID : GPS Give permissions after installing apk in your phone
MainActivity.xml:
<? ​ xml version=​"1.0" ​encoding=​"utf-8"​?>
<​LinearLayout ​xmlns:​android​=​"http://schemas.android.com/apk/res/android"
	​xmlns:​app​=​"http://schemas.android.com/apk/res-auto"
	​xmlns:​tools​=​"http://schemas.android.com/tools"
	​android​:layout_width=​"match_parent"
	​android​:layout_height=​"match_parent"
	​tools​:context=​".MainActivity"
	​android​:orientation=​"vertical"    ​> 

<​TextView
        ​android​:id=​"@+id/tvInfo"
        ​android​:layout_width=​"match_parent"
        ​android​:layout_height=​"wrap_content"

        ​android​:text=​"" ​/> 
    <​Button
        ​android​:id=​"@+id/btnShare"
        ​android​:layout_width=​"match_parent"
        ​android​:layout_height=​"wrap_content"
        ​android​:text=​"Share" ​/>
 </​LinearLayout​> 

 MainActivity.java:
package ​com.example.locationmcc; 

 import ​android.Manifest;
 import ​android.content.Intent;
 import ​android.content.pm.PackageManager;
 import ​android.location.Address;
 import ​android.location.Geocoder;
 import ​android.location.Location;
 import ​android.support.annotation.​NonNull​;
 import ​android.support.annotation.​Nullable​;
 import ​android.support.v4.app.ActivityCompat;
 import ​android.support.v7.app.AppCompatActivity; 
import ​android.os.Bundle;
 import ​android.view.View;
 import ​android.widget.Button;
 import ​android.widget.TextView;
 import ​android.widget.Toast; 
 import ​com.google.android.gms.common.ConnectionResult;
 import ​com.google.android.gms.common.api.GoogleApiClient;
 import ​com.google.android.gms.common.api.GoogleApiClient.ConnectionCallbacks;
 import ​com.google.android.gms.common.api.GoogleApiClient.OnConnectionFailedListener;
 import ​com.google.android.gms.location.LocationServices; 
 import ​java.io.IOException;
 import ​java.util.List;
 import ​java.util.Locale; 

 public class ​MainActivity ​extends ​AppCompatActivity ​implements GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener​ {
    ​TextView ​tvInfo​;
    Button ​btnShare​;
    GoogleApiClient ​gac​;
    Location ​loc​;
 
    ​@Override
    ​protected void ​onCreate(Bundle savedInstanceState) {        
​	super​.onCreate(savedInstanceState);
        setContentView(R.layout.​activity_main ​ );
        ​tvInfo ​= findViewById(R.id.​tvInfo ​ );
        ​btnShare ​= findViewById(R.id.​btnShare ​ ); 
        GoogleApiClient.Builder builder = ​new ​GoogleApiClient.Builder(​this​);
        builder.addApi(LocationServices.​API ​ );
        builder.addConnectionCallbacks(​this​);
        builder.addOnConnectionFailedListener(​this​);
        ​gac ​= builder.build(); 
        ​btnShare​.setOnClickListener(​new ​View.OnClickListener() {
            ​@Override
            ​public void ​onClick(View view) {
                ​Intent i = ​new ​Intent(Intent.​ACTION_SEND ​ );
                i.setType(​"text/plain"​);
                i.putExtra(Intent.​EXTRA_TEXT ​ , ​"My address is: " ​+ tvInfo​.getText().toString());
                startActivity(i);
            }
        });
    } 

    ​@Override
    ​protected void ​onStart() { 
       ​super​.onStart();
        ​if ​(​gac ​!= ​null​)
            ​gac​.connect();
    } 
    ​@Override
    ​protected void ​onStop() {
        ​super​.onStop();
        ​if ​(​gac ​!= ​null​) {
            ​gac​.disconnect();
            ​//btnShare.setEnabled(false);
        ​ }
    } 
    ​@Override
    ​public void ​onPointerCaptureChanged(​boolean ​hasCapture) { 
    } 
    ​@Override
    ​public void ​onConnectionFailed(​@NonNull ​ConnectionResult connectionResult) {
        Toast.​makeText ​ (​this​, ​"Connection Failed"​, Toast.​LENGTH_SHORT ​ ).show();
    } 
    ​@Override
    ​public void ​onConnected(​@Nullable ​Bundle bundle) {
       ​ ​if ​(ActivityCompat.​checkSelfPermission
 ​ (​this​, android.Manifest.permission.​ACCESS_FINE_LOCATION​ ) != PackageManager.​PERMISSION_GRANTED && ActivityCompat.​checkSelfPermission
 ​ (​this​, android.Manifest.permission.​ACCESS_COARSE_LOCATION ​ ) != PackageManager.​PERMISSION_GRANTED
 ​ )
 {
            ​return​;
        }
        ​loc ​= LocationServices.​FusedLocationApi.getLastLocation(​gac​);
        ​if​(​loc ​!= ​null​){
            ​double ​lat = ​loc​.getLatitude();
            ​double ​lon = ​loc​.getLongitude();
            ​tvInfo​.setText(​"Latitude: "​+ lat+ ​" Longitude: "​+ lon);
            Geocoder g = ​new ​Geocoder(​this​, Locale.​ENGLISH ​ ); 
            ​try ​{
                ​List<android.location.Address> la = g.getFromLocation(lat, lon, ​1​); //number of results = 1
                ​ android.location.Address add = la.get(​0​);
                String msg = add.getCountryName() + ​" " ​+                        add.getAdminArea() + ​" " ​+                        add.getSubAdminArea() + ​" " ​+                        add.getLocality() + ​" " ​+                        add.getSubLocality() + ​" " ​+                        add.getThoroughfare() + ​" " ​+ 
                       add.getSubThoroughfare() + ​" " ​+                        add.getPostalCode();                ​tvInfo​.setText(msg); 
            }
 ​catch ​(IOException e) {
                e.printStackTrace();
            } 
        }
        ​else​{ 
           ​tvInfo​.setText(​"Please enable GPS"​);
        }
    } 
    ​@Override
    ​public void ​onConnectionSuspended(​int ​i) {
        Toast.​makeText ​ (​this​, ​"Connection Suspended "​+​CAUSE_NETWORK_LOST ​ , Toast.​LENGTH_SHORT ​ ).show();
    } 
 } 


 
AndroidManifest.xml:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.example.locationmcc"> <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/> 
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
     <uses-permission android:name="android.permission.INTERNET"/>
     <application
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
         <activity android:name=".MainActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" /> 
 
                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
         ​<meta-data
             android:name="com.google.android.geo.API_KEY"
             android:value="​YOUR KEY HERE ​ "/> 
     </application> </manifest> 

Gradle: (Add this line) implementation ​'com.google.android.gms:play-services:12.0.1'